{"ast":null,"code":"import _objectSpread from \"/Users/tunguyen/Desktop/NailShopWebsite/NailShopWebsite/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/tunguyen/Desktop/NailShopWebsite/NailShopWebsite/src/context.js\";\nimport React, { Component } from 'react';\nimport { storeProducts, detailProduct } from './data';\nconst ProductContext = React.createContext(); //Provider\n//Consumer\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      detailProduct: detailProduct,\n      cart: []\n    };\n\n    this.setProducts = () => {\n      let tempProducts = [];\n      storeProducts.forEach(item => {\n        const singleItem = _objectSpread({}, item);\n\n        tempProducts = [...tempProducts, singleItem];\n      });\n      this.setState(() => {\n        return {\n          products: tempProducts,\n          cart: [...this.state.cart, product]\n        };\n      }, () => {\n        console.log(this.state);\n      });\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    this.handleDetail = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n\n    this.addToCart = id => {\n      let tempProducts = [...this.state.products];\n      const index = tempProducts.indexOf(this.getItem(id));\n      const product = tempProducts[index];\n      product.inCart = true;\n      product.count = 1;\n      const price = product.price;\n      product.total = price;\n      this.setState(() => {\n        return {\n          products: tempProducts,\n          cart: [this.state.cart]\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  //------Testing--------------\n  // tester = () => {\n  //     console.log('State Products: ', this.state.products[0].inCart);\n  //     console.log('Data Products: ', storeProducts[0].inCart);\n  //     const tempProducts = [...this.state.products];\n  //     tempProducts[0].inCart = true;\n  //     this.setState(() => {\n  //         return {products:tempProducts}\n  //     }), () => {\n  //         console.log('State Products: ', this.state.products[0].inCart);\n  //         console.log('Data Products: ', storeProducts[0].inCart);\n  //     }\n  // }\n  render() {\n    return React.createElement(ProductContext.Provider, {\n      value: _objectSpread({}, this.state, {\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/Users/tunguyen/Desktop/NailShopWebsite/NailShopWebsite/src/context.js"],"names":["React","Component","storeProducts","detailProduct","ProductContext","createContext","ProductProvider","state","products","cart","setProducts","tempProducts","forEach","item","singleItem","setState","product","console","log","getItem","id","find","handleDetail","addToCart","index","indexOf","inCart","count","price","total","componentDidMount","render","props","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {storeProducts, detailProduct} from './data';\n\nconst ProductContext = React.createContext();\n//Provider\n//Consumer\n\n\nclass ProductProvider extends Component {\n    state = {\n        products: [],\n        detailProduct: detailProduct,\n        cart: []\n    };\n    componentDidMount() {\n        this.setProducts();\n    }\n    setProducts = () => {\n        let tempProducts = [];\n        storeProducts.forEach(item =>{\n            const singleItem = {...item};\n            tempProducts = [...tempProducts, singleItem];\n        })\n        this.setState(()=>{\n            return {products: tempProducts, cart: [...this.state.cart, product]};\n        }, () => {console.log(this.state)})\n    };\n\n    getItem = (id) => {\n        const product = this.state.products.find(item => item.id === id);\n        return product;\n    }\n\n    handleDetail = (id) => {\n        const product = this.getItem(id);\n        this.setState(() => {\n            return {detailProduct:product}\n        })\n    }\n    addToCart = (id) => {\n        let tempProducts = [...this.state.products];\n        const index = tempProducts.indexOf(this.getItem(id));\n        const product = tempProducts[index];\n        product.inCart = true;\n        product.count = 1;\n        const price = product.price;\n        product.total = price;\n        this.setState(() => {\n            return {products:tempProducts, cart:[this.state.cart]};\n        });\n\n    }\n//------Testing--------------\n// tester = () => {\n//     console.log('State Products: ', this.state.products[0].inCart);\n//     console.log('Data Products: ', storeProducts[0].inCart);\n\n//     const tempProducts = [...this.state.products];\n//     tempProducts[0].inCart = true;\n//     this.setState(() => {\n//         return {products:tempProducts}\n//     }), () => {\n//         console.log('State Products: ', this.state.products[0].inCart);\n//         console.log('Data Products: ', storeProducts[0].inCart);\n//     }\n// }\n\n    render() {\n        return (\n            <ProductContext.Provider value={{\n                ...this.state,\n                handleDetail: this.handleDetail,\n                addToCart: this.addToCart\n            }}>\n                {this.props.children}\n            </ProductContext.Provider>\n        )\n    }\n}\n\nconst ProductConsumer = ProductContext.Consumer;\n\nexport {ProductProvider, ProductConsumer};\n"]},"metadata":{},"sourceType":"module"}